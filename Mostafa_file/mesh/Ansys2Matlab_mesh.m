function model=Ansys2Matlab_mesh(meshfile,meshtype)
%%
%Ansys2Matlab_mesh is a
% reads a .dat file containing nodes coordinates and Elements as
% generated by Ansys and returns a structure containing the mesh
% information
%
%To extract the .dat file press on solution in Mechanical model
%--->tools ---> Write input file
%
% INPUT:
%   meshfile - string of file name including '.dat'
%   meshtype - QUAD4 or QUAD8 support 2D
%              HEX20          support 3D
%
% OUTPUT:
% model
%   nodes (index x y z)
%   Elements(index nnode ....)
%   fixedNodes ( array containing fixed node)
%   Number of Elements NumElements
%   idb matrix
%   connectivity matrix
%  Number of Elements, Nodes, Dof
%  DOF, ALL, free, fixed
% properties.E
% properties.nu
% properties.rho
% properties.prop
% %
%  Created by Mostafa Baghdadi
%   Last Modified: 25/03/2018



%%
fid = fopen(meshfile);                                                       % open ansys mesh file
fidNodes = fopen('tempNodes.m','wt');                                        % create temporary files for storing Nodes and Elements
fidElem = fopen('tempElements.m','wt');
fidFix= fopen('tempFix.m','wt');

targetfile=fidNodes;                                                        % current file to write
tline = fgetl(fid);                                                         % current line

numbody=1;                                                                  % number of current body to read
bodyfinished=0;                                                             % state: current body read, checking if there's more!
cnt=0;
cnt1=0;
ddof=0;
while ischar(tline)
    
    if (length(tline)>1)&&...
            strcmp(tline,...
            '/com,*********** Nodes for the whole assembly ***********')    %Start of nodes lines
        cnt=1;
        targetfile=fidNodes;
    elseif (length(tline)>13) && strcmp(tline(1:14),'/wb,elem,start')        %Start of elements lines
        cnt=2;
        targetfile=fidElem;
    elseif (length(tline)>1) &&...
            strcmp(tline,'/com,*********** Fixed Supports ***********')     % start of fixed nodes
        cnt=3;
        targetfile=fidFix;
    end
    
    
    if cnt==1 && (length(tline)>1) && (tline(1)==' ')                       %Get nodes lines
        fprintf(targetfile,[tline,'\n']);
    end
    if cnt==1 && (length(tline)>1) && strcmp(tline(1:2),'-1')               %end of nodes lines
        cnt=0;
    end
    
    if strcmp(meshtype,'HEX20')
        if cnt==2 && (length(tline)>1) && (tline(1)==' ')                       %Get Element lines
            cnt1=cnt1+1;                                                    %3D meshes are usually large ,one need to extract for each element 2 lines
            if rem(cnt1,2)==1
                fprintf(targetfile,[tline,'']);
            else
                fprintf(targetfile,[tline,'\n']);
            end
        end
    elseif  strcmp(meshtype,'QUAD4')| strcmp(meshtype,'QUAD8')
        if cnt==2 && (length(tline)>1) && (tline(1)==' ')                       %Get Element lines for 2D
            fprintf(targetfile,[tline,'\n']);
        end
    end
    
    
    if cnt==2 && (length(tline)>11) && strcmp(tline(1:12),'/wb,elem,end')   %end of Elements lines
        cnt=0;
    end
    
    if cnt==3 && (length(tline)>1) && (tline(1)==' ')                       % get fixed nodes
        fprintf(targetfile,[tline,'\n']);
    end
    if cnt==3 && (length(tline)>1) && strcmp(tline,'cmsel,s,_FIXEDSU')
        cnt=0;
    end
    
    
    
    tline = fgetl(fid);                                                         % get next line
    
end
fclose(fid);
fclose(fidNodes);
fclose(fidElem);
fclose(fidFix);

%% load from temp files


tempNodes=[];
load('tempNodes.m');                                                         % load Nodes coordinates
Nodes=tempNodes(:,1:end);                                                      %only Node ID x y z

tempElements=[];
load('tempElements.m')
if strcmp(meshtype,'QUAD4')
    Elem=tempElements(:,11:15);
elseif strcmp(meshtype,'QUAD8')
    Elem=tempElements(:,11:19);                                             % select columns containing Elements
elseif strcmp(meshtype,'HEX20')
    Elem=tempElements(:,11:end);
end


fileId = fopen('tempFix.m');                                                    %load and read fixed nodes
datacell = textscan(fileId,'%d');
fclose(fileId);
FixedNodes = datacell{1};

%% output
if strcmp(meshtype,'HEX20')
    ddof=3;
    % build incidence table [n idx idy idz]
    idb = [(1:size(Nodes,1))',reshape(1:(size(Nodes,1)*3),3,size(Nodes,1))'];
    
    % build connectivity table [e idx1 idy1 idz1 idx2 idy2 idz2 ... ]
    connectivity = zeros(size(Elem,1),(size(Elem,2)-1)*3+1);
    for ii = 1:size(Elem,1)
        row = idb(Elem(ii,2:end),2:4)';
        connectivity(ii,:) = [ii row(1:numel(row))];
    end
elseif strcmp(meshtype,'QUAD4')| strcmp(meshtype,'QUAD8')
    ddof=2;
    % build incidence table [n idx idy ]
    idb = [(1:size(Nodes,1))',reshape(1:(size(Nodes,1)*2),2,size(Nodes,1))'];
    
    % build connectivity table [e idx1 idy1  idx2 idy2  ... ]
    connectivity = zeros(size(Elem,1),(size(Elem,2)-1)*2+1);
    for ii = 1:size(Elem,1)
        row = idb(Elem(ii,2:end),2:3)';
        connectivity(ii,:) = [ii row(1:numel(row))];
    end
end



model.nodes=Nodes;
model.elements=Elem;
model.fixedNodes=FixedNodes;
model.NumElements=size(model.elements);                                     %num of nodes in elements & elements
model.idb=idb;
model.connectivity=connectivity;

model.Nelem = size(model.elements,1);
model.Nnodes = size(model.nodes,1);
model.Ndofs = size(model.nodes,1)*ddof;

model.dofs.free = 1:model.Nnodes*ddof;
model.dofs.all  = 1:model.Nnodes*ddof;
model.dofs.fixed= [];
model.properties.E    = [];
model.properties.nu   = [];
model.properties.rho  = [];
model.properties.prop = [];


fclose('all')
delete tempElements*.m
delete tempNodes*.m
delete tempFix*.m
end